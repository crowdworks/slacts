version: 2.1

jobs:
  test:
    docker:
    - image: golang:1.11.4
      environment:
        GO111MODULE: "on"
        TEST_RESULTS: /tmp/test-results
    steps:
    - checkout
    - restore_cache:
        name: Restore go modules cache
        keys:
        - mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
    - run:
        name: Install dependencies
        command: go mod download
    - run:
        name: Install linters
        command: |
          go get golang.org/x/tools/cmd/goimports
          go get golang.org/x/lint/golint
          go get github.com/jstemmer/go-junit-report
    - save_cache:
        name: Save go modules cache
        key: mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
        paths:
        - /go/pkg/mod/cache
    - run:
        name: Exec go vet
        command: go vet ./...
    - run:
        name: Exec goimports
        command: test -z "$(goimports -l . | tee /dev/stderr)"
    - run:
        name: Exec golint
        command: test -z "$(golint ./... | tee /dev/stderr)"
    - run:
        name: Run tests
        command: |
          mkdir -p ${TEST_RESULTS}
          trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
          go test -coverprofile ${TEST_RESULTS}/coverage.txt -v ./... | tee ${TEST_RESULTS}/go-test.out
          go tool cover -html ${TEST_RESULTS}/coverage.txt -o ${TEST_RESULTS}/coverage.html
    - run:
        name: Send result codecov
        working_directory: jsonrpc
        command: |
          cp ${TEST_RESULTS}/coverage.txt .
          bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results
  docker-build:
    docker:
    - image: docker:18.05.0
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.05.0-ce
        docker_layer_caching: true
    - run:
        name: build
        command: docker build --no-cache -t slacts:latest .
workflows:
  version: 2
  default:
    jobs:
    - test
    - docker-build
